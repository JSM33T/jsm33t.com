# name: Auto Deploy .NET API via Docker

# on:
#   push:
#     paths:
#       - 'dot-api/**'
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     environment: production

#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v4

#       - name: Deploy to Server via SSH
#         uses: appleboy/ssh-action@v1.0.0
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USER }}
#           key: ${{ secrets.SSH_KEY }}
#           script: |
#             echo ">> Ensure repo exists at /root/jsm33t.com"
#             if [ ! -d /root/jsm33t.com ]; then
#               git clone https://github.com/JSM33T/jsm33t.com.git /root/jsm33t.com
#             else
#               cd /root/jsm33t.com
#               git reset --hard
#               git pull
#             fi

#             echo ">> Navigate to dot-api"
#             cd /root/jsm33t.com/dot-api

#             echo ">> Ensure appsettings.json exists in dot-api"
#             cp /root/appsettings.json /root/jsm33t.com/dot-api/appsettings.json && ls -l /root/jsm33t.com/dot-api/

#             echo ">> Stop and remove existing container..."
#             docker stop jassiapp || true
#             docker rm jassiapp || true

#             echo ">> Remove old image..."
#             docker rmi jassiapi || true

#             echo ">> Build new Docker image"
#             docker build --no-cache -t jassiapi .

#             echo ">> Run container"
#             docker run -d --name jassiapp -p 5000:8080 \
#               -e SMTP_SERVER="${{ secrets.SMTP_SERVER }}" \
#               jassiapi

#             echo ">> Deployment complete"
#             docker ps

name: Auto Deploy .NET API via Docker

on:
  push:
    paths:
      - 'dot-api/**'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Navigate to repo
            cd /root/jsm33t.com

            # Update code
            echo ">> Pulling latest code"
            git reset --hard
            git pull

            # Ensure appsettings.json in dot-api
            echo ">> Copying appsettings.json"
            cp /root/appsettings.json dot-api/JassWebApi.Base/appsettings.json
            ls -l dot-api/

            # Navigate to dot-api
            cd dot-api

            # Stop and remove existing container
            echo ">> Stopping and removing old container"
            docker stop jassiapp || true
            docker rm jassiapp || true

            # Remove old image
            echo ">> Removing old image"
            docker rmi jassiapi || true

            # Build new image
            echo ">> Building new image"
            docker build --no-cache -t jassiapi .

            # Run new container
            echo ">> Running new container"
            docker run -d --name jassiapp -p 5000:8080 \
              -e SMTP_SERVER="${{ secrets.SMTP_SERVER }}" \
              jassiapi

            # Check running containers
            echo ">> Deployment complete"
            docker ps
